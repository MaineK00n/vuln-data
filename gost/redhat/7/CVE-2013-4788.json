{
  "ThreatSeverity": "Low",
  "PublicDate": "2013-07-15T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2013-4788 glibc: PTR_MANGLE does not initialize to a random value for the pointer guard when compiling static executables",
    "id": "985625",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=985625"
  },
  "Cvss": {
    "cvss_base_score": "3.7",
    "cvss_scoring_vector": "AV:L/AC:H/Au:N/C:P/I:P/A:P",
    "status": "draft"
  },
  "Cvss3": {
    "cvss3_base_score": "",
    "cvss3_scoring_vector": "",
    "status": ""
  },
  "Iava": "",
  "Cwe": "",
  "Statement": "Red Hat Security Response Team has rated this issue as having Low security impact. This issue is not currently planned to be addressed in future updates for Red Hat Enterprise Linux 5 and 6. For additional information, refer to the Issue Severity Classification: https://access.redhat.com/security/updates/classification/ .",
  "Acknowledgement": "",
  "Mitigation": "",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "glibc",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    }
  ],
  "Name": "CVE-2013-4788",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "The PTR_MANGLE implementation in the GNU C Library (aka glibc or libc6) 2.4, 2.17, and earlier, and Embedded GLIBC (EGLIBC) does not initialize the random value for the pointer guard, which makes it easier for context-dependent attackers to control execution flow by leveraging a buffer-overflow vulnerability in an application and using the known zero value pointer guard to calculate a pointer address."
    }
  ],
  "References": []
}
