{
  "ThreatSeverity": "Moderate",
  "PublicDate": "2021-11-01T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2021-42694 Developer environment: Homoglyph characters can lead to trojan source attack",
    "id": "2015365",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2015365"
  },
  "Cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "Cvss3": {
    "cvss3_base_score": "8.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
    "status": "draft"
  },
  "Iava": "",
  "Cwe": "CWE-838",
  "Statement": "This is a flaw with the way unicode standards are implemented in the context of development environments, which have specialized requirements for rendering text. It is not a flaw in Red Hat products.",
  "Acknowledgement": "Red Hat would like to thank Nicholas Boucher and Ross Anderson (University of Cambridge) for reporting this issue.",
  "Mitigation": "",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Will not fix",
      "package_name": "gcc",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    }
  ],
  "Name": "CVE-2021-42694",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "An issue was discovered in the character definitions of the Unicode Specification through 14.0. The specification allows an adversary to produce source code identifiers such as function names using homoglyphs that render visually identical to a target identifier. Adversaries can leverage this to inject code via adversarial identifier definitions in upstream software dependencies invoked deceptively in downstream software."
    },
    {
      "Detail": "A flaw was found in the way Unicode standards are implemented in the context of development environments, which have specialized requirements for rendering text. Homoglyphs are different Unicode characters that, to the naked eye, look the same.  An attacker could use homoglyphs to deceive a human reviewer by creating a malicious patch containing functions that look similar to standard library functions, such as print, but replace one character with a homoglyph. This function can then be defined in an upstream dependency to launch source code-related attacks."
    }
  ],
  "References": [
    {
      "Reference": "https://trojansource.codes/\nhttps://www.lightbluetouchpaper.org/2021/11/01/trojan-source-invisible-vulnerabilities/\nhttps://www.unicode.org/reports/tr36/#Canonical_Represenation"
    }
  ]
}
