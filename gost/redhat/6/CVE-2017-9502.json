{
  "ThreatSeverity": "Moderate",
  "PublicDate": "2017-06-14T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2017-9502 curl: URL file scheme drive letter buffer overflow",
    "id": "1461321",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1461321"
  },
  "Cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "Cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "Iava": "",
  "Cwe": "CWE-787",
  "Statement": "",
  "Acknowledgement": "",
  "Mitigation": "",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "curl",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    }
  ],
  "Name": "CVE-2017-9502",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "In curl before 7.54.1 on Windows and DOS, libcurl's default protocol function, which is the logic that allows an application to set which protocol libcurl should attempt to use when given a URL without a scheme part, had a flaw that could lead to it overwriting a heap based memory buffer with seven bytes. If the default protocol is specified to be FILE or a file: URL lacks two slashes, the given \"URL\" starts with a drive letter, and libcurl is built for Windows or DOS, then libcurl would copy the path 7 bytes off, so that the end of the given path would write beyond the malloc buffer (7 bytes being the length in bytes of the ascii string \"file://\")."
    }
  ],
  "References": [
    {
      "Reference": "https://curl.haxx.se/docs/adv_20170614.html"
    }
  ]
}
