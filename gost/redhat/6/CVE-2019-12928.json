{
  "ThreatSeverity": "Low",
  "PublicDate": "2019-06-05T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2019-12928 QEMU: QMP migrate command execution issue",
    "id": "1724812",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1724812"
  },
  "Cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "Cvss3": {
    "cvss3_base_score": "0.0",
    "cvss3_scoring_vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:N",
    "status": "draft"
  },
  "Iava": "",
  "Cwe": "CWE-78",
  "Statement": "QEMU Machine Protocol (QMP) is for administrative control of QEMU instances. It must not be exposed to unprivileged users.",
  "Acknowledgement": "",
  "Mitigation": "",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "qemu-kvm",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    }
  ],
  "Name": "CVE-2019-12928",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "** DISPUTED ** The QMP migrate command in QEMU version 4.0.0 and earlier is vulnerable to OS command injection, which allows the remote attacker to achieve code execution, denial of service, or information disclosure by sending a crafted QMP command to the listening server. Note: This has been disputed as a non-issue since QEMU's -qmp interface is meant to be used by trusted users. If one is able to access this interface via a tcp socket open to the internet, then it is an insecure configuration issue."
    },
    {
      "Detail": "QEMU's Machine Protocol (QMP) is designed to enable remote applications (ex. Libvirt) to control and manage QEMU process instances. It is meant to be used by trusted users and applications. The TCP server socket is only one of the transport options supported by QMP; other, more secure options, being local UNIX socket. If one is able to run 'migrate' command, the user already has access to the guest VM. Then migrating guest state to an unworthy remote machine via nc is not really a security issue.\nLibvirt only uses local UNIX sockets to interact with the guest VMs that it manages. This UNIX socket is owned by the same user-id as the QEMU process instance. Other users on the system cannot connect to the UNIX socket. Libvirt also creates a unique per-VM sVirt label so VMs cannot access each other's UNIX sockets, even though they are owned by the same system user-id."
    }
  ],
  "References": []
}
