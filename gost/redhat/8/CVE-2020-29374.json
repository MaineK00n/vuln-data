{
  "ThreatSeverity": "Moderate",
  "PublicDate": "2020-06-02T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2020-29374 kernel: the get_user_pages implementation when used for a copy-on-write page does not properly consider the semantics of read operations and therefore can grant unintended read access",
    "id": "1903249",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1903249"
  },
  "Cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "Cvss3": {
    "cvss3_base_score": "3.6",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N",
    "status": "draft"
  },
  "Iava": "",
  "Cwe": "CWE-362",
  "Statement": "This issue was rated as having Moderate impact because of the prerequisities required for successful exploitation.\nThis is an issue with zygote Android model where the child process shares anon pages with the parent, despite the child can attack the parent and at the same time child and parent run with different levels of privileges.\nThis is not a model applicable to Red Hat Enterprise Linux applications that we are aware of.\nTo mitigate this issue when this model is required it is recommended to use execve() after fork, followed by dropping or changing privileges.",
  "Acknowledgement": "",
  "Mitigation": "Mitigation for this issue is either not available or the currently available options don't meet the Red Hat Product Security criteria comprising ease of use and deployment, applicability to widespread installation base or stability.",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    }
  ],
  "Name": "CVE-2020-29374",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "An issue was discovered in the Linux kernel before 5.7.3, related to mm/gup.c and mm/huge_memory.c. The get_user_pages (aka gup) implementation, when used for a copy-on-write page, does not properly consider the semantics of read operations and therefore can grant unintended write access, aka CID-17839856fd58."
    },
    {
      "Detail": "An issue was discovered in the Linux kernel related to mm/gup.c and mm/huge_memory.c. The get_user_pages (aka gup) implementation, when used for a copy-on-write page, does not properly consider the semantics of read operations and therefore can grant unintended read access."
    }
  ],
  "References": []
}
