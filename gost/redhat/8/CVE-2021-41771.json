{
  "ThreatSeverity": "Moderate",
  "PublicDate": "2021-10-14T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2021-41771 golang: debug/macho: invalid dynamic symbol table command can cause panic",
    "id": "2020725",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2020725"
  },
  "Cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "Cvss3": {
    "cvss3_base_score": "7.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "Iava": "",
  "Cwe": "CWE-119",
  "Statement": "",
  "Acknowledgement": "",
  "Mitigation": "",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "go-toolset:rhel8/golang",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    }
  ],
  "Name": "CVE-2021-41771",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation."
    },
    {
      "Detail": "An out of bounds read vulnerability was found in debug/macho of the Go standard library. When using the debug/macho standard library (stdlib) and malformed binaries are parsed using Open or OpenFat, it can cause golang to attempt to read outside of a slice (array) causing a panic when calling ImportedSymbols. An attacker can use this vulnerability to craft a file which causes an application using this library to crash resulting in a denial of service."
    }
  ],
  "References": [
    {
      "Reference": "https://groups.google.com/g/golang-announce/c/0fM21h43arc"
    }
  ]
}
