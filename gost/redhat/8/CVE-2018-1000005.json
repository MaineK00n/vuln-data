{
  "ThreatSeverity": "Low",
  "PublicDate": "2018-01-24T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2018-1000005 curl: Out-of-bounds read in code handling HTTP/2 trailers",
    "id": "1536013",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1536013"
  },
  "Cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "Cvss3": {
    "cvss3_base_score": "4.8",
    "cvss3_scoring_vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:L",
    "status": "verified"
  },
  "Iava": "",
  "Cwe": "CWE-125",
  "Statement": "This flaw was introduced in curl-7.49.0. Therefore the versions of curl shipped with Red Hat Enterprise Linux 5, 6 and 7 and Red Hat Ceph Storage 2 are not affected by this flaw.",
  "Acknowledgement": "Red Hat would like to thank the Curl project for reporting this issue. Upstream acknowledges Zhouyihai Ding as the original reporter.",
  "Mitigation": "",
  "AffectedRelease": [
    {
      "product_name": "Red Hat JBoss Core Services 1",
      "release_date": "2019-06-18T00:00:00Z",
      "advisory": "RHSA-2019:1543",
      "package": "curl",
      "cpe": "cpe:/a:redhat:jboss_core_services:1"
    }
  ],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "curl",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    }
  ],
  "Name": "CVE-2018-1000005",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "libcurl 7.49.0 to and including 7.57.0 contains an out bounds read in code handling HTTP/2 trailers. It was reported (https://github.com/curl/curl/pull/2231) that reading an HTTP/2 trailer could mess up future trailers since the stored size was one byte less than required. The problem is that the code that creates HTTP/1-like headers from the HTTP/2 trailer data once appended a string like `:` to the target buffer, while this was recently changed to `: ` (a space was added after the colon) but the following math wasn't updated correspondingly. When accessed, the data is read out of bounds and causes either a crash or that the (too large) data gets passed to client write. This could lead to a denial-of-service situation or an information disclosure if someone has a service that echoes back or uses the trailers for something."
    }
  ],
  "References": [
    {
      "Reference": "https://curl.haxx.se/docs/adv_2018-824a.html"
    }
  ]
}
