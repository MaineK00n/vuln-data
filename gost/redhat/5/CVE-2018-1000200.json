{
  "ThreatSeverity": "Moderate",
  "PublicDate": "2018-04-24T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2018-1000200 kernel: NULL pointer dereference on OOM kill of large mlocked process",
    "id": "1568744",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1568744"
  },
  "Cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "Cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "verified"
  },
  "Iava": "",
  "Cwe": "CWE-476",
  "Statement": "",
  "Acknowledgement": "Red Hat would like to thank David Rientjes (Google) for reporting this issue.",
  "Mitigation": "",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 5",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:5"
    }
  ],
  "Name": "CVE-2018-1000200",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "The Linux Kernel versions 4.14, 4.15, and 4.16 has a null pointer dereference which can result in an out of memory (OOM) killing of large mlocked processes. The issue arises from an oom killed process's final thread calling exit_mmap(), which calls munlock_vma_pages_all() for mlocked vmas.This can happen synchronously with the oom reaper's unmap_page_range() since the vma's VM_LOCKED bit is cleared before munlocking (to determine if any other vmas share the memory and are mlocked)."
    },
    {
      "Detail": "A flaw was found in the Linux kernel where an out of memory (oom) killing of a process that has large spans of mlocked memory can result in deferencing a NULL pointer, leading to denial of service."
    }
  ],
  "References": []
}
