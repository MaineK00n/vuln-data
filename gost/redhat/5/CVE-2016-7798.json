{
  "ThreatSeverity": "Moderate",
  "PublicDate": "2016-09-19T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2016-7798 ruby: IV Reuse in GCM Mode",
    "id": "1381526",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1381526"
  },
  "Cvss": {
    "cvss_base_score": "4.3",
    "cvss_scoring_vector": "AV:N/AC:M/Au:N/C:P/I:N/A:N",
    "status": "draft"
  },
  "Cvss3": {
    "cvss3_base_score": "3.7",
    "cvss3_scoring_vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "status": "draft"
  },
  "Iava": "",
  "Cwe": "",
  "Statement": "",
  "Acknowledgement": "",
  "Mitigation": "A possible workaround to this flaw is, when using aes-256-gcm mode, always set the key first and then the iv. For example when setting random keys and iv use the following code segment:\nkey = cipher.random_key\niv = cipher.random_iv",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 5",
      "fix_state": "Will not fix",
      "package_name": "ruby",
      "cpe": "cpe:/o:redhat:enterprise_linux:5"
    }
  ],
  "Name": "CVE-2016-7798",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism."
    }
  ],
  "References": []
}
