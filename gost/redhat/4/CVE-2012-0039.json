{
  "ThreatSeverity": "Moderate",
  "PublicDate": "2003-05-29T00:00:00Z",
  "Bugzilla": {
    "description": "CVE-2012-0039 glib2: hash table collisions CPU usage DoS",
    "id": "772720",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=772720"
  },
  "Cvss": {
    "cvss_base_score": "5.0",
    "cvss_scoring_vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
    "status": "draft"
  },
  "Cvss3": {
    "cvss3_base_score": "",
    "cvss3_scoring_vector": "",
    "status": ""
  },
  "Iava": "",
  "Cwe": "",
  "Statement": "",
  "Acknowledgement": "",
  "Mitigation": "",
  "AffectedRelease": [],
  "PackageState": [
    {
      "product_name": "Red Hat Enterprise Linux 4",
      "fix_state": "Affected",
      "package_name": "glib2",
      "cpe": "cpe:/o:redhat:enterprise_linux:4"
    }
  ],
  "Name": "CVE-2012-0039",
  "DocumentDistribution": "",
  "Details": [
    {
      "Detail": "** DISPUTED ** GLib 2.31.8 and earlier, when the g_str_hash function is used, computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.  NOTE: this issue may be disputed by the vendor; the existence of the g_str_hash function is not a vulnerability in the library, because callers of g_hash_table_new and g_hash_table_new_full can specify an arbitrary hash function that is appropriate for the application."
    }
  ],
  "References": []
}
