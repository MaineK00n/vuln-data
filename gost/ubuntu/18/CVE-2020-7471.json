{
  "public_data_at_usn": "2020-02-03T10:00:00Z",
  "crd": "2020-02-03T10:00:00Z",
  "candidate": "CVE-2020-7471",
  "public_date": "2020-02-03T12:15:00Z",
  "references": [
    {
      "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7471"
    },
    {
      "reference": "https://www.openwall.com/lists/oss-security/2020/02/03/1"
    },
    {
      "reference": "https://ubuntu.com/security/notices/USN-4264-1"
    }
  ],
  "description": "Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
  "ubuntu_description": "",
  "notes": [],
  "bugs": [],
  "priority": "medium",
  "discovered_by": "Simon Charette",
  "assigned_to": "amurray",
  "patches": [
    {
      "package_name": "python-django",
      "release_patches": [
        {
          "release_name": "bionic",
          "status": "released",
          "note": "1:1.11.11-1ubuntu1.7"
        }
      ]
    }
  ],
  "upstreams": [
    {
      "package_name": "python-django",
      "upstream_links": [
        {
          "link": "https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136 (master)"
        },
        {
          "link": "https://github.com/django/django/commit/505826b469b16ab36693360da9e11fd13213421b (3.0)"
        },
        {
          "link": "https://github.com/django/django/commit/c67a368c16e4680b324b4f385398d638db4d8147 (2.2)"
        },
        {
          "link": "https://github.com/django/django/commit/001b0634cd309e372edb6d7d95d083d02b8e37bd (1.1)"
        }
      ]
    }
  ]
}
