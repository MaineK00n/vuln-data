{
  "public_data_at_usn": "0001-01-01T00:00:00Z",
  "crd": "0001-01-01T00:00:00Z",
  "candidate": "CVE-2020-15225",
  "public_date": "2021-04-29T21:15:00Z",
  "references": [
    {
      "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15225"
    },
    {
      "reference": "https://github.com/carltongibson/django-filter/security/advisories/GHSA-x7gm-rfgv-w973"
    },
    {
      "reference": "https://github.com/carltongibson/django-filter/commit/340cf7a23a2b3dcd7183f6a0d6c383e85b130d2b"
    },
    {
      "reference": "https://pypi.org/project/django-filter/"
    },
    {
      "reference": "https://github.com/carltongibson/django-filter/releases/tag/2.4.0"
    }
  ],
  "description": "django-filter is a generic system for filtering Django QuerySets based on user selections. In django-filter before version 2.4.0, automatically generated `NumberFilter` instances, whose value was later converted to an integer, were subject to potential DoS from maliciously input using exponential format with sufficiently large exponents. Version 2.4.0+ applies a `MaxValueValidator` with a a default `limit_value` of 1e50 to the form field used by `NumberFilter` instances. In addition, `NumberFilter` implements the new `get_max_validator()` which should return a configured validator instance to customise the limit, or else `None` to disable the additional validation. Users may manually apply an equivalent validator if they are not able to upgrade.",
  "ubuntu_description": "",
  "notes": [],
  "bugs": [],
  "priority": "medium",
  "discovered_by": "",
  "assigned_to": "",
  "patches": [
    {
      "package_name": "django-filter",
      "release_patches": [
        {
          "release_name": "bionic",
          "status": "needs-triage",
          "note": ""
        }
      ]
    }
  ],
  "upstreams": []
}
