{
  "public_data_at_usn": "0001-01-01T00:00:00Z",
  "crd": "0001-01-01T00:00:00Z",
  "candidate": "CVE-2021-29482",
  "public_date": "2021-04-28T19:15:00Z",
  "references": [
    {
      "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-29482"
    },
    {
      "reference": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"
    },
    {
      "reference": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"
    }
  ],
  "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
  "ubuntu_description": "",
  "notes": [],
  "bugs": [],
  "priority": "medium",
  "discovered_by": "",
  "assigned_to": "",
  "patches": [
    {
      "package_name": "golang-github-ulikunitz-xz",
      "release_patches": [
        {
          "release_name": "bionic",
          "status": "DNE",
          "note": ""
        }
      ]
    }
  ],
  "upstreams": []
}
