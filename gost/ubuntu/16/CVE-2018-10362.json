{
  "public_data_at_usn": "0001-01-01T00:00:00Z",
  "crd": "0001-01-01T00:00:00Z",
  "candidate": "CVE-2018-10362",
  "public_date": "2018-04-25T05:29:00Z",
  "references": [
    {
      "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-10362"
    },
    {
      "reference": "https://github.com/phpLiteAdmin/pla/issues/11"
    },
    {
      "reference": "http://k3research.outerhaven.de/posts/small-mistakes-lead-to-big-problems.html"
    }
  ],
  "description": "An issue was discovered in phpLiteAdmin 1.9.5 through 1.9.7.1. Due to loose comparison with '==' instead of '===' in classes/Authorization.php for the user-provided login password, it is possible to login with a simpler password if the password has the form of a power in scientific notation (like '2e2' for '200' or '0e1234' for '0'). This is possible because, in the loose comparison case, PHP interprets the string as a number in scientific notation, and thus converts it to a number. After that, the comparison with '==' casts the user input (e.g., the string '200' or '0') to a number, too. Hence the attacker can login with just a '0' or a simple number he has to brute force. Strong comparison with '===' prevents the cast into numbers.",
  "ubuntu_description": "",
  "notes": [],
  "bugs": [
    {
      "bug": "http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=896682"
    },
    {
      "bug": "https://bugs.launchpad.net/bugs/1767723"
    }
  ],
  "priority": "high",
  "discovered_by": "",
  "assigned_to": "",
  "patches": [
    {
      "package_name": "phpliteadmin",
      "release_patches": [
        {
          "release_name": "xenial",
          "status": "DNE",
          "note": ""
        }
      ]
    }
  ],
  "upstreams": []
}
