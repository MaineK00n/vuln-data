{
  "public_data_at_usn": "0001-01-01T00:00:00Z",
  "crd": "0001-01-01T00:00:00Z",
  "candidate": "CVE-2021-32765",
  "public_date": "2021-10-04T21:15:00Z",
  "references": [
    {
      "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-32765"
    },
    {
      "reference": "https://wiki.sei.cmu.edu/confluence/display/c/MEM07-C.+Ensure+that+the+arguments+to+calloc%28%29%2C+when+multiplied%2C+do+not+wrap"
    },
    {
      "reference": "https://github.com/redis/hiredis/security/advisories/GHSA-hfm9-39pp-55p2"
    }
  ],
  "description": "Hiredis is a minimalistic C client library for the Redis database. In affected versions Hiredis is vulnurable to integer overflow if provided maliciously crafted or corrupted `RESP` `mult-bulk` protocol data. When parsing `multi-bulk` (array-like) replies, hiredis fails to check if `count * sizeof(redisReply*)` can be represented in `SIZE_MAX`. If it can not, and the `calloc()` call doesn't itself make this check, it would result in a short allocation and subsequent buffer overflow. Users of hiredis who are unable to update may set the [maxelements](https://github.com/redis/hiredis#reader-max-array-elements) context option to a value small enough that no overflow is possible.",
  "ubuntu_description": "",
  "notes": [
    {
      "note": "seth-arnold\u003e This feels like a bug in calloc() implementation, not in Hiredis. I'm marking this not-affected for us because our calloc(3) should do the right thing."
    }
  ],
  "bugs": [],
  "priority": "medium",
  "discovered_by": "",
  "assigned_to": "",
  "patches": [
    {
      "package_name": "hiredis",
      "release_patches": [
        {
          "release_name": "hirsute",
          "status": "not-affected",
          "note": ""
        }
      ]
    }
  ],
  "upstreams": [
    {
      "package_name": "hiredis",
      "upstream_links": [
        {
          "link": "https://github.com/redis/hiredis/commit/76a7b10005c70babee357a7d0f2becf28ec7ed1e"
        }
      ]
    }
  ]
}
