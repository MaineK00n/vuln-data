{
  "public_data_at_usn": "0001-01-01T00:00:00Z",
  "crd": "0001-01-01T00:00:00Z",
  "candidate": "CVE-2021-45098",
  "public_date": "2021-12-16T05:15:00Z",
  "references": [
    {
      "reference": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45098"
    },
    {
      "reference": "https://forum.suricata.io/t/suricata-6-0-4-and-5-0-8-released/1942"
    },
    {
      "reference": "https://github.com/OISF/suricata/commit/50e2b973eeec7172991bf8f544ab06fb782b97df"
    },
    {
      "reference": "https://redmine.openinfosecfoundation.org/issues/4710"
    },
    {
      "reference": "https://github.com/OISF/suricata/releases"
    }
  ],
  "description": "An issue was discovered in Suricata before 6.0.4. It is possible to bypass/evade any HTTP-based signature by faking an RST TCP packet with random TCP options of the md5header from the client side. After the three-way handshake, it's possible to inject an RST ACK with a random TCP md5header option. Then, the client can send an HTTP GET request with a forbidden URL. The server will ignore the RST ACK and send the response HTTP packet for the client's request. These packets will not trigger a Suricata reject action.",
  "ubuntu_description": "",
  "notes": [],
  "bugs": [],
  "priority": "medium",
  "discovered_by": "",
  "assigned_to": "",
  "patches": [
    {
      "package_name": "suricata",
      "release_patches": [
        {
          "release_name": "trusty",
          "status": "ignored",
          "note": "out of standard support"
        }
      ]
    }
  ],
  "upstreams": []
}
