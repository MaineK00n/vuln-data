[
  {
    "DefinitionID": "def-ALAS-2017-860",
    "Title": "ALAS-2017-860",
    "Description": "Package updates are available for Amazon Linux AMI that fix the following vulnerabilities:\nCVE-2017-10198:\n\t1472320: \nCVE-2017-10198 OpenJDK: incorrect enforcement of certificate path restrictions (Security, 8179998)\nIt was discovered that the Security component of OpenJDK could fail to properly enforce restrictions defined for processing of X.509 certificate chains. A remote attacker could possibly use this flaw to make Java accept certificate using one of the disabled algorithms.\n\nCVE-2017-10193:\n\t1471715: \nCVE-2017-10193 OpenJDK: incorrect key size constraint check (Security, 8179101)\n\nCVE-2017-10135:\n\tA covert timing channel flaw was found in the PKCS#8 implementation in the JCE component of OpenJDK. A remote attacker able to make a Java application repeatedly compare PKCS#8 key against an attacker controlled value could possibly use this flaw to determine the key via a timing side channel.\n1471871: \nCVE-2017-10135 OpenJDK: PKCS#8 implementation timing attack (JCE, 8176760)\n\nCVE-2017-10116:\n\t1471738: \nCVE-2017-10116 OpenJDK: LDAPCertStore following referrals to non-LDAP URLs (Security, 8176067)\nIt was discovered that the LDAPCertStore class in the Security component of OpenJDK followed LDAP referrals to arbitrary URLs. A specially crafted LDAP referral URL could cause LDAPCertStore to communicate with non-LDAP servers.\n\nCVE-2017-10115:\n\t1471851: \nCVE-2017-10115 OpenJDK: DSA implementation timing attack (JCE, 8175106)\nA covert timing channel flaw was found in the DSA implementation in the JCE component of OpenJDK. A remote attacker able to make a Java application generate DSA signatures on demand could possibly use this flaw to extract certain information about the used key via a timing side channel.\n\nCVE-2017-10111:\n\t1471526: \nCVE-2017-10111 OpenJDK: incorrect range checks in LambdaFormEditor (Libraries, 8184185)\n\nCVE-2017-10110:\n\t1471523: \nCVE-2017-10110 OpenJDK: insufficient access control checks in ImageWatched (AWT, 8174098)\n\nCVE-2017-10109:\n\t1471670: \nCVE-2017-10109 OpenJDK: unbounded memory allocation in CodeSource deserialization (Serialization, 8174113)\n\nCVE-2017-10108:\n\t1471888: \nCVE-2017-10108 OpenJDK: unbounded memory allocation in BasicAttribute deserialization (Serialization, 8174105)\n\nCVE-2017-10107:\n\t1471266: \nCVE-2017-10107 OpenJDK: insufficient access control checks in ActivationID (RMI, 8173697)\n\nCVE-2017-10102:\n\t1472345: \nCVE-2017-10102 OpenJDK: incorrect handling of references in DGC (RMI, 8163958)\nIt was discovered that the DCG implementation in the RMI component of OpenJDK failed to correctly handle references. A remote attacker could possibly use this flaw to execute arbitrary code with the privileges of RMI registry or a Java RMI application.\n\nCVE-2017-10101:\n\t1471527: \nCVE-2017-10101 OpenJDK: unrestricted access to com.sun.org.apache.xml.internal.resolver (JAXP, 8173286)\n\nCVE-2017-10096:\n\t1471528: \nCVE-2017-10096 OpenJDK: insufficient access control checks in XML transformations (JAXP, 8172469)\n\nCVE-2017-10090:\n\t1471517: \nCVE-2017-10090 OpenJDK: insufficient access control checks in AsynchronousChannelGroupImpl (8172465, Libraries)\n\nCVE-2017-10074:\n\t1471534: \nCVE-2017-10074 OpenJDK: integer overflows in range check loop predicates (Hotspot, 8173770)\n\nCVE-2017-10067:\n\t1471535: \nCVE-2017-10067 OpenJDK: JAR verifier incorrect handling of missing digest (Security, 8169392)\n\nCVE-2017-10053:\n\t1471889: \nCVE-2017-10053 OpenJDK: reading of unprocessed image data in JPEGImageReader (2D, 8169209)\nIt was discovered that the JPEGImageReader implementation in the 2D component of OpenJDK would, in certain cases, read all image data even if it was not used later. A specially crafted image could cause a Java application to temporarily use an excessive amount of CPU and memory.\n",
    "Advisory": {
      "Severity": "critical",
      "Cves": [
        {
          "CveID": "CVE-2017-10109",
          "Cvss2": "",
          "Cvss3": "",
          "Cwe": "",
          "Impact": "",
          "Href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10109",
          "Public": ""
        }
      ],
      "Bugzillas": [],
      "AffectedCPEList": [],
      "Issued": "1000-01-01T00:00:00Z",
      "Updated": "2017-07-25T17:56:00Z"
    },
    "Debian": null,
    "AffectedPacks": [
      {
        "Name": "java-1.8.0-openjdk-debuginfo",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-devel",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-headless",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-javadoc-zip",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "noarch",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-demo",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-src",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-javadoc",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "noarch",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-debuginfo",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-src",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-demo",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-headless",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.8.0-openjdk-devel",
        "Version": "1:1.8.0.141-1.b16.32.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      }
    ],
    "References": [
      {
        "Source": "cve",
        "RefID": "CVE-2017-10053",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10053"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10067",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10067"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10074",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10074"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10090",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10090"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10096",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10096"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10101",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10101"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10102",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10102"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10107",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10107"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10108",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10108"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10109",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10109"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10110",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10110"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10111",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10111"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10115",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10115"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10116",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10116"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10135",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10135"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10193",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10193"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10198",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10198"
      }
    ]
  },
  {
    "DefinitionID": "def-ALAS-2017-869",
    "Title": "ALAS-2017-869",
    "Description": "Package updates are available for Amazon Linux AMI that fix the following vulnerabilities:\nCVE-2017-10243:\n\tIt was discovered that the wsdlimport tool in the JAX-WS component of OpenJDK did not use secure XML parser settings when parsing WSDL XML documents. A specially crafted WSDL document could cause wsdlimport to use an excessive amount of CPU and memory, open connections to other hosts, or leak information.\n1472666: \nCVE-2017-10243 OpenJDK: insecure XML parsing in wsdlimport (JAX-WS, 8182054)\n\nCVE-2017-10135:\n\tA covert timing channel flaw was found in the PKCS#8 implementation in the JCE component of OpenJDK. A remote attacker able to make a Java application repeatedly compare PKCS#8 key against an attacker controlled value could possibly use this flaw to determine the key via a timing side channel.\n1471871: \nCVE-2017-10135 OpenJDK: PKCS#8 implementation timing attack (JCE, 8176760)\n\nCVE-2017-10116:\n\t1471738: \nCVE-2017-10116 OpenJDK: LDAPCertStore following referrals to non-LDAP URLs (Security, 8176067)\nIt was discovered that the LDAPCertStore class in the Security component of OpenJDK followed LDAP referrals to arbitrary URLs. A specially crafted LDAP referral URL could cause LDAPCertStore to communicate with non-LDAP servers.\n\nCVE-2017-10115:\n\t1471851: \nCVE-2017-10115 OpenJDK: DSA implementation timing attack (JCE, 8175106)\nA covert timing channel flaw was found in the DSA implementation in the JCE component of OpenJDK. A remote attacker able to make a Java application generate DSA signatures on demand could possibly use this flaw to extract certain information about the used key via a timing side channel.\n\nCVE-2017-10110:\n\t1471523: \nCVE-2017-10110 OpenJDK: insufficient access control checks in ImageWatched (AWT, 8174098)\nVulnerability in the Java SE component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).\n\nCVE-2017-10109:\n\t1471670: \nCVE-2017-10109 OpenJDK: unbounded memory allocation in CodeSource deserialization (Serialization, 8174113)\nVulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).\n\nCVE-2017-10108:\n\tVulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).\n1471888: \nCVE-2017-10108 OpenJDK: unbounded memory allocation in BasicAttribute deserialization (Serialization, 8174105)\n\nCVE-2017-10107:\n\t1471266: \nCVE-2017-10107 OpenJDK: insufficient access control checks in ActivationID (RMI, 8173697)\nVulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).\n\nCVE-2017-10102:\n\t1472345: \nCVE-2017-10102 OpenJDK: incorrect handling of references in DGC (RMI, 8163958)\nIt was discovered that the DCG implementation in the RMI component of OpenJDK failed to correctly handle references. A remote attacker could possibly use this flaw to execute arbitrary code with the privileges of RMI registry or a Java RMI application.\n\nCVE-2017-10101:\n\tVulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).\n1471527: \nCVE-2017-10101 OpenJDK: unrestricted access to com.sun.org.apache.xml.internal.resolver (JAXP, 8173286)\n\nCVE-2017-10096:\n\tVulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).\n1471528: \nCVE-2017-10096 OpenJDK: insufficient access control checks in XML transformations (JAXP, 8172469)\n\nCVE-2017-10090:\n\tVulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).\n1471517: \nCVE-2017-10090 OpenJDK: insufficient access control checks in AsynchronousChannelGroupImpl (8172465, Libraries)\n\nCVE-2017-10089:\n\t1471270: \nCVE-2017-10089 OpenJDK: insufficient access control checks in ServiceRegistry (ImageIO, 8172461)\nVulnerability in the Java SE component of Oracle Java SE (subcomponent: ImageIO). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).\n\nCVE-2017-10087:\n\t1471521: \nCVE-2017-10087 OpenJDK: insufficient access control checks in ThreadPoolExecutor (Libraries, 8172204)\nVulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).\n\nCVE-2017-10081:\n\t1471711: \nCVE-2017-10081 OpenJDK: incorrect bracket processing in function signature handling (Hotspot, 8170966)\nVulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.3 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N).\n\nCVE-2017-10074:\n\tVulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).\n1471534: \nCVE-2017-10074 OpenJDK: integer overflows in range check loop predicates (Hotspot, 8173770)\n\nCVE-2017-10067:\n\tVulnerability in the Java SE component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).\n1471535: \nCVE-2017-10067 OpenJDK: JAR verifier incorrect handling of missing digest (Security, 8169392)\n\nCVE-2017-10053:\n\t1471889: \nCVE-2017-10053 OpenJDK: reading of unprocessed image data in JPEGImageReader (2D, 8169209)\nIt was discovered that the JPEGImageReader implementation in the 2D component of OpenJDK would, in certain cases, read all image data even if it was not used later. A specially crafted image could cause a Java application to temporarily use an excessive amount of CPU and memory.\n",
    "Advisory": {
      "Severity": "critical",
      "Cves": [
        {
          "CveID": "CVE-2017-10109",
          "Cvss2": "",
          "Cvss3": "",
          "Cwe": "",
          "Impact": "",
          "Href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10109",
          "Public": ""
        }
      ],
      "Bugzillas": [],
      "AffectedCPEList": [],
      "Issued": "1000-01-01T00:00:00Z",
      "Updated": "2017-08-15T17:30:00Z"
    },
    "Debian": null,
    "AffectedPacks": [
      {
        "Name": "java-1.7.0-openjdk-debuginfo",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-javadoc",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "noarch",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-demo",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-devel",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-src",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-debuginfo",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-src",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-demo",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "java-1.7.0-openjdk-devel",
        "Version": "1:1.7.0.151-2.6.11.0.74.amzn1",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      }
    ],
    "References": [
      {
        "Source": "cve",
        "RefID": "CVE-2017-10053",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10053"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10067",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10067"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10074",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10074"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10081",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10081"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10087",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10087"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10089",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10089"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10090",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10090"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10096",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10096"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10101",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10101"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10102",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10102"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10107",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10107"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10108",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10108"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10109",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10109"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10110",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10110"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10115",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10115"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10116",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10116"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10135",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10135"
      },
      {
        "Source": "cve",
        "RefID": "CVE-2017-10243",
        "RefURL": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-10243"
      }
    ]
  }
]
