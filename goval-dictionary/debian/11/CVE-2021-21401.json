[
  {
    "DefinitionID": "oval:org.debian:def:146256723692800359800649234092863227719",
    "Title": "CVE-2021-21401 nanopb",
    "Description": "Nanopb is a small code-size Protocol Buffers implementation in ansi C. In Nanopb before versions 0.3.9.8 and 0.4.5, decoding a specifically formed message can cause invalid `free()` or `realloc()` calls if the message type contains an `oneof` field, and the `oneof` directly contains both a pointer field and a non-pointer field. If the message data first contains the non-pointer field and then the pointer field, the data of the non-pointer field is incorrectly treated as if it was a pointer value. Such message data rarely occurs in normal messages, but it is a concern when untrusted data is parsed. This has been fixed in versions 0.3.9.8 and 0.4.5. See referenced GitHub Security Advisory for more information including workarounds.",
    "Advisory": {
      "Severity": "",
      "Cves": [
        {
          "CveID": "CVE-2021-21401",
          "Cvss2": "",
          "Cvss3": "",
          "Cwe": "",
          "Impact": "",
          "Href": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21401",
          "Public": ""
        }
      ],
      "Bugzillas": [],
      "AffectedCPEList": [],
      "Issued": "1000-01-01T00:00:00Z",
      "Updated": "1000-01-01T00:00:00Z"
    },
    "Debian": {
      "MoreInfo": "",
      "Date": "1000-01-01T00:00:00Z"
    },
    "AffectedPacks": [
      {
        "Name": "nanopb",
        "Version": "0.4.4-2",
        "Arch": "",
        "NotFixedYet": false,
        "ModularityLabel": ""
      }
    ],
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2021-21401",
        "RefURL": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21401"
      }
    ]
  }
]
