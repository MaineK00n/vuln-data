[
  {
    "DefinitionID": "oval:com.oracle.elsa:def:20182846",
    "Title": "ELSA-2018-2846:  kernel security and bug fix update (IMPORTANT)",
    "Description": "[2.6.32-754.6.3.OL6]\n- Update genkey [bug 25599697]\n\n[2.6.32-754.6.3]\n- [kvm] VMX: fixes for vmentry_l1d_flush module parameter (Marcelo Tosatti) [1628796]\n- [x86] speculation: Use ARCH_CAPABILITIES to skip L1D flush on vmentry (Marcelo Tosatti) [1628796]\n- [x86] KVM: VMX: skip L1TF flush on VM-entry if EPT is disabled (Marcelo Tosatti) [1616397]\n\n[2.6.32-754.6.2]\n- [fs] exec: Limit arg stack to at most 75 of _STK_LIM (Yauheni Kaliuta) [1625976] {CVE-2018-14634}\n- [fs] exec.c: account for argv/envp pointers (Yauheni Kaliuta) [1625976] {CVE-2018-14634}\n\n[2.6.32-754.6.1]\n- [x86] set __max_smt_threads for 1 core systems (Prarit Bhargava) [1623255]\n- [md] dm rq: fix a race condition in rq_completed() (Ming Lei) [1574568]\n- [scsi] scsi_transport_fc: Hold queue lock while calling blk_run_queue_async() (Ming Lei) [1574568]\n- [block] Avoid scheduling delayed work on a dead queue (Ming Lei) [1574568]\n- [block] Avoid that request_fn is invoked on a dead queue (Ming Lei) [1574568]\n- [block] Let blk_drain_queue() caller obtain the queue lock (Ming Lei) [1574568]\n- [block] Rename queue dead flag (Ming Lei) [1574568]\n\n[2.6.32-754.5.1]\n- [s390] dasd: fix IO error for newly defined devices (Hendrik Brueckner) [1574448]\n- [s390] dasd: fix failing path verification (Hendrik Brueckner) [1581684]\n- [s390] qeth: on channel error, reject further cmd requests (Hendrik Brueckner) [1562009]\n- [s390] qdio: fix access to uninitialized qdio_q fields (Hendrik Brueckner) [1581685]\n- [powerpc] stf-barrier: update (rfi_)enabled_flush_types as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: update debugfs as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: update handle_ssbd() as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: update stf_barrier_enable() as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: add cpu_show_spec_store_bypass() as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: add comment as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: move code from setup_64.c to security.c as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: move code from setup.h to security_features.h as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: update fallback routine as in upstream (Gustavo Duarte) [1585299]\n- [powerpc] stf-barrier: update entry barrier slot as in upstream (Gustavo Duarte) [1585299]\n- [x86] Add host_initiated check in reading MSR_AMD64_VIRT_SPEC_CTRL (Wei Huang) [1608576]\n- [x86] KVM: pass host_initiated to functions that read MSRs (Wei Huang) [1608576]\n- [fs] gfs2: Special-case rindex for gfs2_grow (Robert S Peterson) [1384184]\n- [fs] Revert '[fs] gfs2: Special case the rindex in gfs2_write_alloc_required()' (Robert S Peterson) [1384184]\n- [net] ip: process in-order fragments efficiently (Stefano Brivio) [1613925] {CVE-2018-5391}\n- [net] ip: add helpers to process in-order fragments faster. (Stefano Brivio) [1613925] {CVE-2018-5391}\n- [net] ipv6: defrag: drop non-last frags smaller than min mtu (Stefano Brivio) [1613925] {CVE-2018-5391}\n- [net] ip: use rb trees for IP frag queue. (Stefano Brivio) [1613925] {CVE-2018-5391}\n- [net] ip: discard IPv4 datagrams with overlapping segments. (Stefano Brivio) [1613925] {CVE-2018-5391}\n- [net] net: modify skb_rbtree_purge to return the truesize of all purged skbs. (Stefano Brivio) [1613925] {CVE-2018-5391}\n- [net] net: speed up skb_rbtree_purge() (Stefano Brivio) [1613925] {CVE-2018-5391}\n- [net] skbuff: Rename RHEL6 version of skb_tree_purge() to skb_tree_purge_sk() (Stefano Brivio) [1613925] {CVE-2018-5391}\n\n[2.6.32-754.4.1]\n- [kernel] cpu/hotplug: Enable 'nosmt' as late as possible (Frantisek Hrbata) [1593376] {CVE-2018-3620}\n- [x86] x86/mm: Simplify p[g4um]d_page() macros (Josh Poimboeuf) [1593376] {CVE-2018-3620}\n- [x86] x86/mm: Fix regression with huge pages on PAE (Josh Poimboeuf) [1593376] {CVE-2018-3620}\n- [x86] x86/asm: Fix pud/pmd interfaces to handle large PAT bit (Josh Poimboeuf) [1593376] {CVE-2018-3620}\n- [x86] x86/asm: Add pud/pmd mask interfaces to handle large PAT bit (Josh Poimboeuf) [1593376] {CVE-2018-3620}\n- [x86] x86/asm: Move PUD_PAGE macros to page_types.h (Josh Poimboeuf) [1593376] {CVE-2018-3620}\n- [net] tcp: detect malicious patterns in tcp_collapse_ofo_queue() (Florian Westphal) [1611376] {CVE-2018-5390}\n- [net] tcp: avoid collapses in tcp_prune_queue() if possible (Florian Westphal) [1611376] {CVE-2018-5390}\n- [net] tcp: free batches of packets in tcp_prune_ofo_queue() (Florian Westphal) [1611376] {CVE-2018-5390}\n- [net] add rb_to_skb() and other rb tree helpers (Florian Westphal) [1611376] {CVE-2018-5390}\n- [net] tcp: fix a stale ooo_last_skb after a replace (Florian Westphal) [1611376] {CVE-2018-5390}\n- [net] tcp: use an RB tree for ooo receive queue (Florian Westphal) [1611376] {CVE-2018-5390}\n- [net] add rbnode to struct sk_buff (Florian Westphal) [1611376] {CVE-2018-5390}\n- [net] tcp: refine tcp_prune_ofo_queue() to not drop all packets (Florian Westphal) [1611376] {CVE-2018-5390}\n- [x86] syscall: Fix regression when using the last syscall (process_vm_writev) (Lauro Ramos Venancio) [1589032] {CVE-2018-3693}\n- [x86] syscall: Fix regression on strace and stap (Lauro Ramos Venancio) [1589032] {CVE-2018-3693}\n- [kvm] VMX: Fix host GDT.LIMIT corruption (CVE-2018-10301) (Paolo Bonzini) [1601851] {CVE-2018-10901}\n- [x86] Initialize __max_smt_threads to 1 (Waiman Long) [1593376] {CVE-2018-3620}\n- [kernel] cpu/hotplug: detect SMT disabled by BIOS (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] topology: Add topology_max_smt_threads() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Fix incorrect error return code in vm_insert_pfn() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Initialize the vmx_l1d_flush_pages' content (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] kvm: Don't flush L1D cache if VMENTER_L1D_FLUSH_NEVER (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] kvm: Take out the unused nosmt module parameter (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] mm/dump_pagetables: Add a check_l1tf debugfs file (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] l1tf: protect _PAGE_FILE PTEs against speculation for 32-bit PAE (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Protect swap entries aganst L1TF for 32-bit PAE (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu: Make flush_l1d visible in /proc/cpuinfo (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] l1tf: protect _PAGE_FILE PTEs against speculation (Waiman Long) [1593376] {CVE-2018-3620}\n- [Documentation] Add section about CPU vulnerabilities (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] bugs, kvm: Introduce boot-time control of L1TF mitigations (Waiman Long) [1593376] {CVE-2018-3620}\n- [kernel] cpu/hotplug: Set CPU_SMT_NOT_SUPPORTED early (Waiman Long) [1593376] {CVE-2018-3620}\n- [kernel] cpu/hotplug: Expose SMT control init function (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] kvm: Allow runtime control of L1D flush (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] kvm: Serialize L1D flush parameter setter (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] kvm: Move l1tf setup function (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] l1tf: Handle EPT disabled state proper (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] kvm: Drop L1TF MSR list approach (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] litf: Introduce vmx status variable (Waiman Long) [1593376] {CVE-2018-3620}\n- [kernel] cpu/hotplug: Online siblings when SMT control is turned on (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Use MSR save list for IA32_FLUSH_CMD if required (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Extend add_atomic_switch_msr() to allow VMENTER only MSRs (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Separate the VMX AUTOLOAD guest/host number accounting (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Add find_msr() helper function (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Split the VMX MSR LOAD structures to have an host/guest numbers (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Add L1D flush logic (Waiman Long) [1593376] {CVE-2018-3620}\n- [kvm] VMX: Make indirect call speculation safe (Waiman Long) [1593376] {CVE-2018-3620}\n- [kvm] VMX: Enable acknowledge interupt on vmexit (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Add L1D MSR based flush (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Add L1D flush algorithm (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM/VMX: Add module argument for L1TF mitigation (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] KVM: Warn user if KVM is loaded SMT and L1TF CPU bug being present (Waiman Long) [1593376] {CVE-2018-3620}\n- [kvm] x86: Introducing kvm_x86_ops VM init/destroy hooks (Waiman Long) [1593376] {CVE-2018-3620}\n- [kernel] cpu/hotplug: Boot HT siblings at least once (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] Revert 'x86/apic: Ignore secondary threads if nosmt=force' (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Fix up pte-\u003epfn conversion for PAE (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] CPU/AMD: Move TOPOEXT reenablement before reading smp_num_siblings (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpufeatures: Add detection of L1D cache flush support. (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Extend 64bit swap file size limit (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] apic: Ignore secondary threads if nosmt=force (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu/AMD: Evaluate smp_num_siblings early (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] CPU/AMD: Do not check CPUID max ext level before parsing SMP info (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu/intel: Evaluate smp_num_siblings early (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu/topology: Provide detect_extended_topology_early() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu/common: Provide detect_ht_early() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu/AMD: Remove the pointless detect_ht() call (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu: Remove the pointless CPU printout (Waiman Long) [1593376] {CVE-2018-3620}\n- [kernel] cpu/hotplug: Provide knobs to control SMT (Waiman Long) [1593376] {CVE-2018-3620}\n- [kernel] cpu/hotplug: Split do_cpu_down() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] topology: Provide topology_smt_supported() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] smp: Provide topology_is_primary_thread() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] bugs: Move the l1tf function and define pr_fmt properly (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Limit swap file size to MAX_PA/2 (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Disallow non privileged high MMIO PROT_NONE mappings (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Add sysfs reporting for l1tf (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Protect PROT_NONE PTEs against speculation (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Protect swap entries against L1TF (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Change order of offset/type in swap entry (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] speculation/l1tf: Increase 32bit PAE __PHYSICAL_PAGE_SHIFT (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] cpu: Fix incorrect vulnerabilities files function prototypes (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] bugs: Export the internal __cpu_bugs variable (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] spec_ctrl: sync with upstream cpu_set_bug_bits() (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] intel-family.h: Add GEMINI_LAKE SOC (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] mm: Fix swap entry comment and macro (Waiman Long) [1593376] {CVE-2018-3620}\n- [x86] mm: Move swap offset/type up in PTE to work around erratum (Waiman Long) [1593376] {CVE-2018-3620}",
    "Advisory": {
      "Severity": "IMPORTANT",
      "Cves": [
        {
          "CveID": "CVE-2018-5391",
          "Cvss2": "",
          "Cvss3": "",
          "Cwe": "",
          "Impact": "",
          "Href": "https://linux.oracle.com/cve/CVE-2018-5391.html",
          "Public": ""
        }
      ],
      "Bugzillas": [],
      "AffectedCPEList": [],
      "Issued": "1000-01-01T00:00:00Z",
      "Updated": "1000-01-01T00:00:00Z"
    },
    "Debian": null,
    "AffectedPacks": [
      {
        "Name": "kernel",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-abi-whitelists",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-debug",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-debug-devel",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-devel",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-doc",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-firmware",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-headers",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "perf",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "python-perf",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-abi-whitelists",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-debug",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-debug-devel",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-devel",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-doc",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-firmware",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-headers",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "perf",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "python-perf",
        "Version": "0:2.6.32-754.6.3.el6",
        "Arch": "i686",
        "NotFixedYet": false,
        "ModularityLabel": ""
      }
    ],
    "References": [
      {
        "Source": "elsa",
        "RefID": "ELSA-2018-2846",
        "RefURL": "https://linux.oracle.com/errata/ELSA-2018-2846.html"
      },
      {
        "Source": "CVE",
        "RefID": "CVE-2018-5391",
        "RefURL": "https://linux.oracle.com/cve/CVE-2018-5391.html"
      },
      {
        "Source": "CVE",
        "RefID": "CVE-2018-14634",
        "RefURL": "https://linux.oracle.com/cve/CVE-2018-14634.html"
      }
    ]
  },
  {
    "DefinitionID": "oval:com.oracle.elsa:def:20184196",
    "Title": "ELSA-2018-4196: Unbreakable Enterprise kernel security update (IMPORTANT)",
    "Description": "[4.1.12-124.18.5]\n- inet: frag: enforce memory limits earlier (Eric Dumazet)  [Orabug: 28450977] \n- x86/mm/pageattr.c: fix page prot mask (Mihai Carabas)  [Orabug: 28492122] \n- x86/pgtable.h: fix PMD/PUD mask (Mihai Carabas)  [Orabug: 28492122] \n- x86/asm: Add pud/pmd mask interfaces to handle large PAT bit (Toshi Kani)  [Orabug: 28492122]\n\n[4.1.12-124.18.4]\n- kvm/vmx: Dont mark vmx_exit() __exit (Boris Ostrovsky)  [Orabug: 28491688] \n- x86/speculation: Dont mark cpu_no_l1tf __initconst (Boris Ostrovsky)  [Orabug: 28491688] \n- x86/speculation: parse l1tf boot parameter early (Boris Ostrovsky)  [Orabug: 28491688]\n\n[4.1.12-124.18.3]\n- posix-timer: Properly check sigevent-\u003esigev_notify (Thomas Gleixner)  [Orabug: 28481412]  {CVE-2017-18344}\n\n[4.1.12-124.18.2]\n- x86/mm/kmmio: Make the tracer robust against L1TF (Andi Kleen)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/mm/pat: Make set_memory_np() L1TF safe (Andi Kleen)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/mm/pat: Ensure cpa-\u003epfn only contains page frame numbers (Matt Fleming)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Make pmd/pud_mknotpresent() invert (Andi Kleen)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Invert all not present mappings (Andi Kleen)  [Orabug: 28220674]  {CVE-2018-3620}\n- cpu/hotplug: Fix SMT supported evaluation (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- KVM: VMX: Tell the nested hypervisor to skip L1D flush on vmentry (Paolo Bonzini)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/speculation: Use ARCH_CAPABILITIES to skip L1D flush on vmentry (Paolo Bonzini)  [Orabug: 28220674]  {CVE-2018-3620}\n- KVM/VMX: Emulate MSR_IA32_ARCH_CAPABILITIES (KarimAllah Ahmed)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/speculation: Simplify sysfs report of VMX L1TF vulnerability (Paolo Bonzini)  [Orabug: 28220674]  {CVE-2018-3620}\n- Documentation/l1tf: Remove Yonah processors from not vulnerable list (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/KVM/VMX: Dont set l1tf_flush_l1d from vmx_handle_external_intr() (Nicolai Stange)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/irq: Let interrupt handlers set kvm_cpu_l1tf_flush_l1d (Nicolai Stange)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86: Dont include linux/irq.h from asm/hardirq.h (Nicolai Stange)  [Orabug: 28220625]  {CVE-2018-3620}\n- x86/KVM/VMX: Introduce per-host-cpu analogue of l1tf_flush_l1d (Nicolai Stange)  [Orabug: 28220625]  {CVE-2018-3646}\n- x86/KVM/VMX: Move the l1tf_flush_l1d test to vmx_l1d_flush() (Nicolai Stange)  [Orabug: 28220625]  {CVE-2018-3646}\n- x86/KVM/VMX: Replace 'vmx_l1d_flush_always' with 'vmx_l1d_flush_cond' (Nicolai Stange)  [Orabug: 28220625]  {CVE-2018-3646}\n- x86/KVM/VMX: Dont set l1tf_flush_l1d to true from vmx_l1d_flush() (Nicolai Stange)  [Orabug: 28220625]  {CVE-2018-3646}\n- KVM: VMX: support MSR_IA32_ARCH_CAPABILITIES as a feature MSR (Paolo Bonzini)  [Orabug: 28220625]  {CVE-2018-3646}\n- KVM: X86: Introduce kvm_get_msr_feature() (Wanpeng Li)  [Orabug: 28220674]  {CVE-2018-3646}\n- KVM: x86: Add a framework for supporting MSR-based features (Tom Lendacky)  [Orabug: 28220674]  {CVE-2018-3646}\n- cpu/hotplug: detect SMT disabled by BIOS (Josh Poimboeuf)  [Orabug: 28220674]  {CVE-2018-3620}\n- Documentation/l1tf: Fix typos (Tony Luck)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/KVM/VMX: Initialize the vmx_l1d_flush_pages content (Nicolai Stange)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/speculation/l1tf: Unbreak !__HAVE_ARCH_PFN_MODIFY_ALLOWED architectures (Jiri Kosina)  [Orabug: 28220674]  {CVE-2018-3620}\n- Documentation: Add section about CPU vulnerabilities (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/bugs, kvm: Introduce boot-time control of L1TF mitigations (Jiri Kosina)  [Orabug: 28220674]  {CVE-2018-3646}\n- cpu/hotplug: Set CPU_SMT_NOT_SUPPORTED early (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- cpu/hotplug: Expose SMT control init function (Jiri Kosina)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/kvm: Allow runtime control of L1D flush (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/kvm: Serialize L1D flush parameter setter (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/kvm: Add static key for flush always (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/kvm: Move l1tf setup function (Thomas Gleixner)  [Orabug: 28220625]  {CVE-2018-3646}\n- x86/l1tf: Handle EPT disabled state proper (Thomas Gleixner)  [Orabug: 28220625]  {CVE-2018-3620}\n- x86/kvm: Drop L1TF MSR list approach (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/litf: Introduce vmx status variable (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- cpu/hotplug: Online siblings when SMT control is turned on (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/KVM/VMX: Use MSR save list for IA32_FLUSH_CMD if required (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Extend add_atomic_switch_msr() to allow VMENTER only MSRs (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Separate the VMX AUTOLOAD guest/host number accounting (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Add find_msr() helper function (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Split the VMX MSR LOAD structures to have an host/guest numbers (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Add L1D flush logic (Paolo Bonzini)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Add L1D MSR based flush (Paolo Bonzini)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Add L1D flush algorithm (Paolo Bonzini)  [Orabug: 28220674]  {CVE-2018-3646}\n- x86/KVM/VMX: Add module argument for L1TF mitigation (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3646} {CVE-2018-3646}\n- locking/static_keys: Add static_key_{en,dis}able() helpers (Peter Zijlstra)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/KVM: Warn user if KVM is loaded SMT and L1TF CPU bug being present (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3646}\n- KVM: x86: Introducing kvm_x86_ops VM init/destroy hooks (Suravee Suthikulpanit)  [Orabug: 28220674]  {CVE-2018-3646}\n- cpu/hotplug: Boot HT siblings at least once (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- Revert 'x86/apic: Ignore secondary threads if nosmt=force' (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Fix up pte-\u003epfn conversion for PAE (Michal Hocko)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Protect PAE swap entries against L1TF (Vlastimil Babka)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/CPU/AMD: Move TOPOEXT reenablement before reading smp_num_siblings (Borislav Petkov)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/cpufeatures: Add detection of L1D cache flush support. (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Extend 64bit swap file size limit (Vlastimil Babka)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/apic: Ignore secondary threads if nosmt=force (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/cpu/AMD: Evaluate smp_num_siblings early (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/CPU/AMD: Do not check CPUID max ext level before parsing SMP info (Borislav Petkov)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/cpu/intel: Evaluate smp_num_siblings early (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/cpu/topology: Provide detect_extended_topology_early() (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/cpu/common: Provide detect_ht_early() (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/cpu/AMD: Remove the pointless detect_ht() call (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/cpu: Remove the pointless CPU printout (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- cpu/hotplug: Provide knobs to control SMT (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/topology: Add topology_max_smt_threads() (Andi Kleen)  [Orabug: 28220674]  {CVE-2018-3620}\n- cpu/hotplug: Split do_cpu_down() (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/topology: Provide topology_smt_supported() (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/smp: Provide topology_is_primary_thread() (Thomas Gleixner)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/bugs: Move the l1tf function and define pr_fmt properly (Konrad Rzeszutek Wilk)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Limit swap file size to MAX_PA/2 (Andi Klein)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Disallow non privileged high MMIO PROT_NONE mappings (Andi Klein)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Add sysfs reporting for l1tf (Andi Klein)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Make sure the first page is always reserved (Andi Klein)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Protect PROT_NONE PTEs against speculation (Andi Klein)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Protect swap entries against L1TF (Linus Torvalds)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Change order of offset/type in swap entry (Linus Torvalds)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/speculation/l1tf: Increase 32bit PAE __PHYSICAL_PAGE_SHIFT (Andi Klein)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/mm: Limit mmap() of /dev/mem to valid physical addresses (Craig Bergstrom)  [Orabug: 28220674]  {CVE-2018-3620}\n- x86/mm: Prevent non-MAP_FIXED mapping across DEFAULT_MAP_WINDOW border (Kirill A. Shutemov)  [Orabug: 28220674]  {CVE-2018-3620}",
    "Advisory": {
      "Severity": "IMPORTANT",
      "Cves": [
        {
          "CveID": "CVE-2018-5391",
          "Cvss2": "",
          "Cvss3": "",
          "Cwe": "",
          "Impact": "",
          "Href": "https://linux.oracle.com/cve/CVE-2018-5391.html",
          "Public": ""
        }
      ],
      "Bugzillas": [],
      "AffectedCPEList": [],
      "Issued": "1000-01-01T00:00:00Z",
      "Updated": "1000-01-01T00:00:00Z"
    },
    "Debian": null,
    "AffectedPacks": [
      {
        "Name": "kernel-uek",
        "Version": "0:4.1.12-124.18.5.el6uek",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-uek-debug",
        "Version": "0:4.1.12-124.18.5.el6uek",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-uek-debug-devel",
        "Version": "0:4.1.12-124.18.5.el6uek",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-uek-devel",
        "Version": "0:4.1.12-124.18.5.el6uek",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-uek-doc",
        "Version": "0:4.1.12-124.18.5.el6uek",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      },
      {
        "Name": "kernel-uek-firmware",
        "Version": "0:4.1.12-124.18.5.el6uek",
        "Arch": "x86_64",
        "NotFixedYet": false,
        "ModularityLabel": ""
      }
    ],
    "References": [
      {
        "Source": "elsa",
        "RefID": "ELSA-2018-4196",
        "RefURL": "https://linux.oracle.com/errata/ELSA-2018-4196.html"
      },
      {
        "Source": "CVE",
        "RefID": "CVE-2018-3620",
        "RefURL": "https://linux.oracle.com/cve/CVE-2018-3620.html"
      },
      {
        "Source": "CVE",
        "RefID": "CVE-2017-18344",
        "RefURL": "https://linux.oracle.com/cve/CVE-2017-18344.html"
      },
      {
        "Source": "CVE",
        "RefID": "CVE-2018-3646",
        "RefURL": "https://linux.oracle.com/cve/CVE-2018-3646.html"
      },
      {
        "Source": "CVE",
        "RefID": "CVE-2018-5391",
        "RefURL": "https://linux.oracle.com/cve/CVE-2018-5391.html"
      }
    ]
  }
]
